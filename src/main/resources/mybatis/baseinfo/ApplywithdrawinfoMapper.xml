<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.baseinfo.dao.ApplywithdrawinfoDao">

	<select id="get" resultType="com.bootdo.baseinfo.domain.ApplywithdrawinfoDO">
		select `id`,`Uid`,`Phone`,`ApplyMoney`,`PayType`,`Account`,`Stauts`,`Remark`,`Createdate`,`Modifydate` from use_applywithdrawinfo where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.baseinfo.domain.ApplywithdrawinfoDO">
		select `id`,`Uid`,`Phone`,`ApplyMoney`,`PayType`,`Account`,`Stauts`,`Remark`,`Createdate`,`Modifydate` from use_applywithdrawinfo
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uid != null and uid != ''"> and Uid = #{uid} </if>
		  		  <if test="phone != null and phone != ''"> and Phone = #{phone} </if>
		  		  <if test="applymoney != null and applymoney != ''"> and ApplyMoney = #{applymoney} </if>
		  		  <if test="paytype != null and paytype != ''"> and PayType = #{paytype} </if>
		  		  <if test="account != null and account != ''"> and Account = #{account} </if>
		  		  <if test="stauts != null and stauts != ''"> and Stauts = #{stauts} </if>
		  		  <if test="remark != null and remark != ''"> and Remark = #{remark} </if>
		  		  <if test="createdate != null and createdate != ''"> and Createdate = #{createdate} </if>
		  		  <if test="modifydate != null and modifydate != ''"> and Modifydate = #{modifydate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from use_applywithdrawinfo
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uid != null and uid != ''"> and Uid = #{uid} </if>
		  		  <if test="phone != null and phone != ''"> and Phone = #{phone} </if>
		  		  <if test="applymoney != null and applymoney != ''"> and ApplyMoney = #{applymoney} </if>
		  		  <if test="paytype != null and paytype != ''"> and PayType = #{paytype} </if>
		  		  <if test="account != null and account != ''"> and Account = #{account} </if>
		  		  <if test="stauts != null and stauts != ''"> and Stauts = #{stauts} </if>
		  		  <if test="remark != null and remark != ''"> and Remark = #{remark} </if>
		  		  <if test="createdate != null and createdate != ''"> and Createdate = #{createdate} </if>
		  		  <if test="modifydate != null and modifydate != ''"> and Modifydate = #{modifydate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.baseinfo.domain.ApplywithdrawinfoDO" useGeneratedKeys="true" keyProperty="id">
		insert into use_applywithdrawinfo
		(
			`Uid`, 
			`Phone`, 
			`ApplyMoney`, 
			`PayType`, 
			`Account`, 
			`Stauts`, 
			`Remark`, 
			`Createdate`, 
			`Modifydate`
		)
		values
		(
			#{uid}, 
			#{phone}, 
			#{applymoney}, 
			#{paytype}, 
			#{account}, 
			#{stauts}, 
			#{remark}, 
			#{createdate}, 
			#{modifydate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.baseinfo.domain.ApplywithdrawinfoDO">
		update use_applywithdrawinfo 
		<set>
			<if test="uid != null">`Uid` = #{uid}, </if>
			<if test="phone != null">`Phone` = #{phone}, </if>
			<if test="applymoney != null">`ApplyMoney` = #{applymoney}, </if>
			<if test="paytype != null">`PayType` = #{paytype}, </if>
			<if test="account != null">`Account` = #{account}, </if>
			<if test="stauts != null">`Stauts` = #{stauts}, </if>
			<if test="remark != null">`Remark` = #{remark}, </if>
			<if test="createdate != null">`Createdate` = #{createdate}, </if>
			<if test="modifydate != null">`Modifydate` = #{modifydate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from use_applywithdrawinfo where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from use_applywithdrawinfo where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>