<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.baseinfo.dao.AccountdetailDao">

	<select id="get" resultType="com.bootdo.baseinfo.domain.AccountdetailDO">
		select `id`,`Aid`,`OperateType`,`IsIncome`,`FrontAccount`,`DealMoney`,`BackAccount`,`Createdate`,`Modifydate` from use_accountdetail where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.baseinfo.domain.AccountdetailDO">
		select `id`,`Aid`,`OperateType`,`IsIncome`,`FrontAccount`,`DealMoney`,`BackAccount`,`Createdate`,`Modifydate` from use_accountdetail
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="aid != null and aid != ''"> and Aid = #{aid} </if>
		  		  <if test="operatetype != null and operatetype != ''"> and OperateType = #{operatetype} </if>
		  		  <if test="isincome != null and isincome != ''"> and IsIncome = #{isincome} </if>
		  		  <if test="frontaccount != null and frontaccount != ''"> and FrontAccount = #{frontaccount} </if>
		  		  <if test="dealmoney != null and dealmoney != ''"> and DealMoney = #{dealmoney} </if>
		  		  <if test="backaccount != null and backaccount != ''"> and BackAccount = #{backaccount} </if>
		  		  <if test="createdate != null and createdate != ''"> and Createdate = #{createdate} </if>
		  		  <if test="modifydate != null and modifydate != ''"> and Modifydate = #{modifydate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from use_accountdetail
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="aid != null and aid != ''"> and Aid = #{aid} </if>
		  		  <if test="operatetype != null and operatetype != ''"> and OperateType = #{operatetype} </if>
		  		  <if test="isincome != null and isincome != ''"> and IsIncome = #{isincome} </if>
		  		  <if test="frontaccount != null and frontaccount != ''"> and FrontAccount = #{frontaccount} </if>
		  		  <if test="dealmoney != null and dealmoney != ''"> and DealMoney = #{dealmoney} </if>
		  		  <if test="backaccount != null and backaccount != ''"> and BackAccount = #{backaccount} </if>
		  		  <if test="createdate != null and createdate != ''"> and Createdate = #{createdate} </if>
		  		  <if test="modifydate != null and modifydate != ''"> and Modifydate = #{modifydate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.baseinfo.domain.AccountdetailDO" useGeneratedKeys="true" keyProperty="id">
		insert into use_accountdetail
		(
			`Aid`, 
			`OperateType`, 
			`IsIncome`, 
			`FrontAccount`, 
			`DealMoney`, 
			`BackAccount`, 
			`Createdate`, 
			`Modifydate`
		)
		values
		(
			#{aid}, 
			#{operatetype}, 
			#{isincome}, 
			#{frontaccount}, 
			#{dealmoney}, 
			#{backaccount}, 
			#{createdate}, 
			#{modifydate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.baseinfo.domain.AccountdetailDO">
		update use_accountdetail 
		<set>
			<if test="aid != null">`Aid` = #{aid}, </if>
			<if test="operatetype != null">`OperateType` = #{operatetype}, </if>
			<if test="isincome != null">`IsIncome` = #{isincome}, </if>
			<if test="frontaccount != null">`FrontAccount` = #{frontaccount}, </if>
			<if test="dealmoney != null">`DealMoney` = #{dealmoney}, </if>
			<if test="backaccount != null">`BackAccount` = #{backaccount}, </if>
			<if test="createdate != null">`Createdate` = #{createdate}, </if>
			<if test="modifydate != null">`Modifydate` = #{modifydate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from use_accountdetail where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from use_accountdetail where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>